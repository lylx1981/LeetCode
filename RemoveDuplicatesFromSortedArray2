public class RemoveDuplicatesFromSortedArr2 {

    /**
     * Two Pointers.
     * Duplicates are allowed at most twice.
     * It means that the number can be the same as the last number.
     * Instead of comparing with the last number, compare with the second last.
     * Implementation:
     * Edge case: If nums.length <= 2, already true, return nums.length.
     * For each number n in nums:
     * | If len < 2 or n > nums[len - 2]:
     * |   Set nums[len] to n. Add len by 1.
     * len<2 的时候，是初始化的时期，什么都不用做，直接赋值就好，其实效果是len和i其实是一样的，自己给自己赋值
     * len>2的时候采用nums[i] != nums[len - 2]判断，意思是只要我和len-2位一样，那么len-1位肯定也一样，因为数组是有序的
     * 所以只有nums[i] 不等于 nums[len - 2]时，i do not care nums[len-1]是什么，因为肯定不会使得同一个元素记录超过2次
     * 那么这时候，我就把num[i]赋值给nums[len]，然后len++
     * Return len.
     */
    public int removeDuplicates(int[] nums) {
        if (nums.length <= 2) {
            return nums.length;
        }
        int len = 0;
        for (int i = 0; i < nums.length; i++) {
            if (i < 2 || nums[i] != nums[len - 2]) {
                nums[len++] = nums[i];
            }
        }
        return len;
    }
}
